the nodes talk, as long as it is some valid encoding of quads?
<HMC_A_> json-ld is just an "easy" one
<HMC_A_> the nodes could talk n3logic at eachother, I guess, but it much harder to work with?
<HMC_A_> the nodes could even talk raw quads at eachother, but that would carry a ton of redundancy?
<HMC_A_> binary encoded jsonld seems like the right compromise, but what is your concern(s)?




intro:
http://sourceforge.net/p/eulersharp/code/HEAD/tree/trunk/2006/02swap/classes/Euler4.js




env CC="clang++-3.6 -Xclang -fcolor-diagnostics" make -e  marpa 2>&1 | less -R
env LD_PRELOAD=libmarpa/dist/.libs/libmarpa.so ./tau --level 1 load_n3 n3.natural3


~/sw/swap/cwm.py  n3-grammar.n3 --triples  > n3-grammar.nt
~/sw/rdfconvert-0.4/bin/rdfconvert.sh   n3-grammar.nt  n3-grammar.nq
cat n3-grammar.nq load_n3 > load_n3.nq


make clean;env CC="clang++-3.6 -Xclang -fcolor-diagnostics -ferror-limit=10 -fsanitize=address -fsanitize=integer -fsanitize=undefined -fsanitize=unsigned-integer-overflow -fno-sanitize-recover=undefined" make -e  2>&1 | less -R